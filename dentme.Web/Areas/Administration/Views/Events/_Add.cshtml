@model EventViewModel

@inject ISelectListHelper SelectList
@inject Localizer Localizer
@{
    Layout = "~/Views/Shared/_ModalLayout.cshtml";
}

<div class="modal-header">
    <h5 class="modal-title">@Localizer.AddEvent</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">×</span>
    </button>
</div>
<form asp-antiforgery="true" enctype="multipart/form-data" data-ajax-url="@Url.Action("Add", "Events", new { area = "Administration" })" data-ajax="true" data-ajax-method="post" data-ajax-success="hideModal" data-ajax-update="#update-modal-lg">
    <div class="modal-body pb-0">
        <input hidden asp-for="SaveAndOptions" />
        <input hidden asp-for="EventDocuments" />
        <input hidden asp-for="EventImages" />
        <input id="lat" hidden asp-for="Latitude" />
        <input id="lng" hidden asp-for="Longitude" />


        @if (!ViewData.ModelState.IsValid)
        {
            <div class="m-alert m-alert--icon m-alert--outline alert alert-danger alert-dismissible animated fadeIn" role="alert">
                <div class="m-alert__icon">
                    <i class="la la-warning"></i>
                </div>
                <div class="m-alert__text">
                    @Html.ValidationSummary()
                </div>
                <div class="m-alert__close">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label class="form-control-label">* @Localizer.Name</label>
                        <input type="text" asp-for="Name" class="form-control m-input" placeholder="@Localizer.Name">
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label class="form-control-label"> @Localizer.Country</label>
                        <select class="form-control m-bootstrap-select m_selectpicker" asp-for="CountryId" asp-items="@SelectList.CountriesBase(true)" onchange="EventAdd__FillCities()" onload="EventAdd__FillCities()"></select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label class="form-control-label">* @Localizer.City</label>
                        <select class="form-control m-bootstrap-select m_selectpicker" asp-for="CityId" asp-items="SelectList.CitiesBaseByCountryID(Model.CountryId,true)"></select>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label class="form-control-label">* @Localizer.Place</label>
                        <input type="text" asp-for="Place" class="map-input form-control m-input" placeholder="@Localizer.Place">
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label class="form-control-label">* @Localizer.StartEvent</label>
                        <input type="text" class="date-picker form-control m-input" asp-for="DateFrom" readonly="" placeholder="@Localizer.SelectDate" id="m_datepicker_2">
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label class="form-control-label"> @Localizer.EndEvent</label>
                        <input type="text" class="date-picker form-control m-input" asp-for="DateTo" readonly="" placeholder="@Localizer.SelectDate" id="m_datepicker_2_1">
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group m-form__group row">
            <div class="col-lg-12">
                <label class="form-control-label">* @Localizer.Map</label>
                <div style="height:200px;width:100%;" id="map"></div>
            </div>
        </div>

        <div class="form-group m-form__group row">
            <div class="col-lg-12">
                <label class="form-control-label">* @Localizer.Desription</label>
                <textarea class="summernote" asp-for="Description" id="m_summernote_2" style="display: none;"></textarea>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12">
                        <label for="announcFiles" class="form-control-label"> @Localizer.Files</label>
                        <div class="m-dropzone dropzone mb-4 border-info" id="announcFiles">
                            <div class="fallback">
                                <input name="files" type="file" multiple />
                                <input type="submit" value="Upload" />
                            </div>
                            <div class="m-dropzone__msg dz-message needsclick">
                                <h6 class="m-dropzone__msg-title">@Localizer.DropzoneMsgTitle</h6>
                                <span class="m-dropzone__msg-desc">@Localizer.DropzoneMsgDesc</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>
    <div class="modal-footer">
        <div class="form-actions right">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer.Close</button>
            <button type="submit" id="save" class="btn btn-primary">@Localizer.Save</button>
        </div>
    </div>
    <div class="datepicker datepicker-dropdown dropdown-menu datepicker-orient-left datepicker-orient-bottom" style="top: 378.6px; left: 587.683px; z-index: 10; "><div class="datepicker-days" style=""><table class="table-condensed"><thead><tr><th colspan="7" class="datepicker-title" style="display: none;"></th></tr><tr><th class="prev"><i class="la la-angle-left"></i></th><th colspan="5" class="datepicker-switch">September 2018</th><th class="next"><i class="la la-angle-right"></i></th></tr><tr><th class="dow">Su</th><th class="dow">Mo</th><th class="dow">Tu</th><th class="dow">We</th><th class="dow">Th</th><th class="dow">Fr</th><th class="dow">Sa</th></tr></thead><tbody><tr><td class="old day" data-date="1535241600000">26</td><td class="old day" data-date="1535328000000">27</td><td class="old day" data-date="1535414400000">28</td><td class="old day" data-date="1535500800000">29</td><td class="old day" data-date="1535587200000">30</td><td class="old day" data-date="1535673600000">31</td><td class="day" data-date="1535760000000">1</td></tr><tr><td class="day" data-date="1535846400000">2</td><td class="day" data-date="1535932800000">3</td><td class="day" data-date="1536019200000">4</td><td class="day" data-date="1536105600000">5</td><td class="day" data-date="1536192000000">6</td><td class="day" data-date="1536278400000">7</td><td class="day" data-date="1536364800000">8</td></tr><tr><td class="day" data-date="1536451200000">9</td><td class="day" data-date="1536537600000">10</td><td class="day" data-date="1536624000000">11</td><td class="day" data-date="1536710400000">12</td><td class="day" data-date="1536796800000">13</td><td class="day" data-date="1536883200000">14</td><td class="day" data-date="1536969600000">15</td></tr><tr><td class="day" data-date="1537056000000">16</td><td class="day" data-date="1537142400000">17</td><td class="today day" data-date="1537228800000">18</td><td class="day" data-date="1537315200000">19</td><td class="day" data-date="1537401600000">20</td><td class="day" data-date="1537488000000">21</td><td class="day" data-date="1537574400000">22</td></tr><tr><td class="day" data-date="1537660800000">23</td><td class="day" data-date="1537747200000">24</td><td class="day" data-date="1537833600000">25</td><td class="day" data-date="1537920000000">26</td><td class="day" data-date="1538006400000">27</td><td class="day" data-date="1538092800000">28</td><td class="day" data-date="1538179200000">29</td></tr><tr><td class="day" data-date="1538265600000">30</td><td class="new day" data-date="1538352000000">1</td><td class="new day" data-date="1538438400000">2</td><td class="new day" data-date="1538524800000">3</td><td class="new day" data-date="1538611200000">4</td><td class="new day" data-date="1538697600000">5</td><td class="new day" data-date="1538784000000">6</td></tr></tbody><tfoot><tr><th colspan="7" class="today" style="display: none;">Today</th></tr><tr><th colspan="7" class="clear" style="display: none;">Clear</th></tr></tfoot></table></div><div class="datepicker-months" style="display: none;"><table class="table-condensed"><thead><tr><th colspan="7" class="datepicker-title" style="display: none;"></th></tr><tr><th class="prev"><i class="la la-angle-left"></i></th><th colspan="5" class="datepicker-switch">2018</th><th class="next"><i class="la la-angle-right"></i></th></tr></thead><tbody><tr><td colspan="7"><span class="month">Jan</span><span class="month">Feb</span><span class="month">Mar</span><span class="month">Apr</span><span class="month">May</span><span class="month">Jun</span><span class="month">Jul</span><span class="month">Aug</span><span class="month focused">Sep</span><span class="month">Oct</span><span class="month">Nov</span><span class="month">Dec</span></td></tr></tbody><tfoot><tr><th colspan="7" class="today" style="display: none;">Today</th></tr><tr><th colspan="7" class="clear" style="display: none;">Clear</th></tr></tfoot></table></div><div class="datepicker-years" style="display: none;"><table class="table-condensed"><thead><tr><th colspan="7" class="datepicker-title" style="display: none;"></th></tr><tr><th class="prev"><i class="la la-angle-left"></i></th><th colspan="5" class="datepicker-switch">2010-2019</th><th class="next"><i class="la la-angle-right"></i></th></tr></thead><tbody><tr><td colspan="7"><span class="year old">2009</span><span class="year">2010</span><span class="year">2011</span><span class="year">2012</span><span class="year">2013</span><span class="year">2014</span><span class="year">2015</span><span class="year">2016</span><span class="year">2017</span><span class="year focused">2018</span><span class="year">2019</span><span class="year new">2020</span></td></tr></tbody><tfoot><tr><th colspan="7" class="today" style="display: none;">Today</th></tr><tr><th colspan="7" class="clear" style="display: none;">Clear</th></tr></tfoot></table></div><div class="datepicker-decades" style="display: none;"><table class="table-condensed"><thead><tr><th colspan="7" class="datepicker-title" style="display: none;"></th></tr><tr><th class="prev"><i class="la la-angle-left"></i></th><th colspan="5" class="datepicker-switch">2000-2090</th><th class="next"><i class="la la-angle-right"></i></th></tr></thead><tbody><tr><td colspan="7"><span class="decade old">1990</span><span class="decade">2000</span><span class="decade focused">2010</span><span class="decade">2020</span><span class="decade">2030</span><span class="decade">2040</span><span class="decade">2050</span><span class="decade">2060</span><span class="decade">2070</span><span class="decade">2080</span><span class="decade">2090</span><span class="decade new">2100</span></td></tr></tbody><tfoot><tr><th colspan="7" class="today" style="display: none;">Today</th></tr><tr><th colspan="7" class="clear" style="display: none;">Clear</th></tr></tfoot></table></div><div class="datepicker-centuries" style="display: none;"><table class="table-condensed"><thead><tr><th colspan="7" class="datepicker-title" style="display: none;"></th></tr><tr><th class="prev"><i class="la la-angle-left"></i></th><th colspan="5" class="datepicker-switch">2000-2900</th><th class="next"><i class="la la-angle-right"></i></th></tr></thead><tbody><tr><td colspan="7"><span class="century old">1900</span><span class="century focused">2000</span><span class="century">2100</span><span class="century">2200</span><span class="century">2300</span><span class="century">2400</span><span class="century">2500</span><span class="century">2600</span><span class="century">2700</span><span class="century">2800</span><span class="century">2900</span><span class="century new">3000</span></td></tr></tbody><tfoot><tr><th colspan="7" class="today" style="display: none;">Today</th></tr><tr><th colspan="7" class="clear" style="display: none;">Clear</th></tr></tfoot></table></div></div>
</form>

@section scripts {
    <script src="~/demo/default/custom/crud/forms/widgets/summernote.js" type="text/javascript"></script>
    <script src="~/demo/default/custom/crud/forms/widgets/dropzone.js" type="text/javascript"></script>
    <script src='//cdn.jsdelivr.net/gmaps4rails/2.1.2/gmaps4rails.js'></script>
    <script src='//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore.js'></script>
    <script src="~/vendors/custom/gmaps/gmaps.js"></script>

    <script type="text/javascript">
        function EventAdd__FillCities() {
            var countryId = $("#CountryId").val();

            $("#CityId").html("");
            $("#CityId").append($("<option selected></option>").val("0").html("@Localizer.SelectCity"));

            if (countryId != 0) {
                $.ajax({
                    url: "@Url.Action("GetCitiesByCountryId", "Cities", new { area = "Administration" })",
                    type: "GET",
                    dataType: "JSON",
                    data: { countryId: countryId },
                    success: function (data) {
                        $("#CityId").selectpicker("destroy");
                        $.each(data, function (i, element) {
                            $("#CityId").append($('<option></option>').val(element.value).html(element.text));
                        });
                        $("#CityId").selectpicker();
                    }
                });
            }
        }
        function initMap() {
            var position;
            var geocoder = new google.maps.Geocoder();
            if (parseInt(@Model.Latitude)) {
                position = { lat: parseFloat($("#lat").val()), lng: parseFloat($("#lng").val()) };
            }
            else {
                position = { lat: 43.84864, lng: 18.35644 };
                $("#lat").val("43.84864");
                $("#lng").val("18.35644");
            }

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: position
            });
            marker = new google.maps.Marker(
                {
                    position: position, map: map,
                    draggable: true,
                    animation: google.maps.Animation.DROP
                });
            $(marker).on("click", function () {
                if (marker.getAnimation() !== null) {
                    marker.setAnimation(null);
                    console.log("click");
                } else {
                    marker.setAnimation(google.maps.Animation.BOUNCE);
                }
            });

            //Get address from marker position
            function geocodeLatLng(geocoder, map) {
                //testni podaci

                //var rezultat = JSON.parse(JSON.stringify(data));
                //for (var i = 0; i < rezultat.results[0].address_components.length; i++) {
                //    if (rezultat.results[0].address_components[i].types[0] == "establishment")
                //        console.log("Place= " + rezultat.results[0].address_components[i].long_name);
                //    if (rezultat.results[0].address_components[i].types[0] == "locality")
                //        console.log("City= " + rezultat.results[0].address_components[i].long_name);
                //    if (rezultat.results[0].address_components[i].types[0] == "country")
                //        console.log("Country= " + rezultat.results[0].address_components[i].long_name);
                //}
                geocoder.geocode({ 'location': marker.position },async function (results, status) {
                    if (status === 'OK') {
                        if (results[0]) {
                            console.log(results[0].address_components);
                            for (var i = results[0].address_components.length-1; i >=0; i--) {  // ide obrnuto zato sto api vrati drzavu na posljednjem mjestu u komponentama a ona treba fill cities

                                if (results[0].address_components[i].types[0] == "country") { // za drzavu
                                    var countryOptions = $("#CountryId option");
                                    for (var k = 0; k < countryOptions.length; k++) {
                                        var countryName = results[0].address_components[i].long_name;
                                        if ($($("#CountryId option")[k]).text() == countryName) {
                                            $("#CountryId").val($($("#CountryId option")[k]).val());
                                            $($("#CountryId option")[k]).attr("selected", "selected");
                                            $("#CountryId").siblings(".btn").attr("title", countryName);
                                            $("#CountryId").siblings(".btn").find(".filter-option-inner").text(countryName);
                                            await EventAdd__FillCities();
                                            break;
                                        }
                                        $($("#CountryId option")[k]).removeAttr("selected");
                                    }
                                }
                                if (results[0].address_components[i].types[0] == "route" || results[0].address_components[i].types[0] == "establishment") {  // za adresu
                                    $("#Place").val(results[0].address_components[i].long_name + " " + results[0].address_components[0].long_name);
                                }

                                if (results[0].address_components[i].types[0] == "locality") {  // za grad
                                    var cityOptions = $("#CityId option");
                                    var cityName = results[0].address_components[i].long_name;
                                    console.log(cityOptions);     // ovdje je lista option-a == 0
                                    for (var j = 0; j < cityOptions.length; j++) {
                                        if ($($("#CityId option")[j]).text() == cityName) {

                                            $("#CityId").val($($("#CityId option")[j]).val());
                                            $($("#CityId option")[j]).attr("selected", "selected");
                                            $("#CityId").siblings(".btn").attr("title", cityName);
                                            $("#CityId").siblings(".btn").find(".filter-option-inner").text(cityName);
                                            break;
                                        }
                                        $($("#CityId option")[j]).removeAttr("selected");
                                    }
                                }


                            }
                        } else {
                            alert('No results found');
                        }
                    } else {
                        alert('Geocoder failed due to: ' + status);
                    }
                });
            }

            var markerInfoWindow = new google.maps.InfoWindow;

            //show infowindow on marker position

            //google.maps.event.addListener(marker, 'drag', function () {
            //    markerInfoWindow.setPosition(marker.position);
            //    markerInfoWindow.setContent(marker.position.lat() + "," + marker.position.lng());
            //    markerInfoWindow.open(map);
            //    this.setTitle('I am marker');
            //});


            //on dragend marker
            google.maps.event.addListener(marker, 'dragend', function () {
                $("#lat").val(marker.position.lat());
                $("#lng").val(marker.position.lng());

                map.panTo(marker.position);
                markerInfoWindow.close();
                geocodeLatLng(geocoder, map);
            });

            //Current Position info window ----------------------

            //google.maps.event.addListenerOnce(map, 'tilesloaded', function () {
            //    //this part runs when the mapobject is created and rendered
            //    google.maps.event.addListenerOnce(map, 'tilesloaded', function () {
            //        //this part runs when the mapobject shown for the first time
            //        var infoWindow = new google.maps.InfoWindow;
            //        if (navigator.geolocation) {
            //            navigator.geolocation.getCurrentPosition(function (position) {
            //                var pos = {
            //                    lat: position.coords.latitude,
            //                    lng: position.coords.longitude
            //                };

            //                infoWindow.setPosition(pos);
            //                infoWindow.setContent('You are here :) hehe');
            //                infoWindow.open(map);
            //                map.setCenter(pos);
            //                map.zoom = 10;
            //            }, function () {
            //                handleLocationError(true, infoWindow, map.getCenter());
            //            });
            //        } else {
            //            // Browser doesn't support Geolocation
            //            handleLocationError(false, infoWindow, map.getCenter());
            //        }
            //    });
            //});

            //Get map location from input fields
            function GetGeolocation() {
                var city = $("#CityId option:selected").val() != 0 ? $("#CityId option:selected").text() : "";
                var country = $("#CountryId option:selected").val() != 0 ? $("#CountryId option:selected").text() : "";
                var address = $('.map-input').val() + " " + city + " " + country;
                console.log(address);
                geocoder.geocode({ 'address': address }, function (results, status) {
                    if (status === 'OK') {
                        map.setCenter(results[0].geometry.location);
                        marker.setPosition(results[0].geometry.location);
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }
            $("#CityId,#CountryId").on("change", function () {
                GetGeolocation();
            });
            $("#Place").on("blur", function () {
                GetGeolocation();
                //test marker
                //marker.setPosition(new google.maps.LatLng(43.343033, 17.807894));
            });


        }

        function hideModal(data) {
            if (data.success) {
                $("#m_events_index_datatable").mDatatable().destroy();
                EventsDraw();
                NotificationHandler(data.notification.value);

                closeModal();
            }
        }
        $(document).ready(function () {
            $('#m_summernote_2').summernote();



            Dropzone.autoDiscover = false;
            var DropzoneDemo = function () {
                //== Private functions
                var demos = function () {
                    var myDropzone = new Dropzone("#announcFiles", {
                        url: '@Url.Action("Upload", "Events", new { area = "Administration" })',
                        method: 'POST',
                        autoProcessQueue: true,
                        uploadMultiple: true,
                        paramName: 'files',
                        parallelUploads: 20,
                        maxFiles: 20,
                        maxFilesize: 5,
                        acceptedFiles: "image/*,.xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf",
                        addRemoveLinks: true,
                        removedfile: function (file) {
                            $.ajax({
                                url: "@Url.Action("RemoveFile", "Events", new { area = "Administration" })/?eventId=@Model.Id&fileName=" + file.name,
                                dataType: "JSON",
                                method: "GET",
                                success: function (data) {
                                    console.log(JSON.parse(data.value).Type == 1);
                                    if (JSON.parse(data.value).Type == 1) {
                                        console.log("EHEHHE");
                                        for (var i = 0; i < $(".dz-filename span").length; i++) {
                                            if ($($(".dz-filename span")[i]).html() == file.name) {
                                                $($(".dz-preview")[i]).remove();
                                                break;
                                            }
                                        }
                                    }
                                    NotificationHandler(data.value);
                                }
                            });
                        }
                    });
                    @foreach (var item in Model.EventImages)
                        {
                            @:var mockFile = { name: "@item.Name", size: @item.Size, accepted:true };
                            @:myDropzone.options.addedfile.call(myDropzone, mockFile);
                            @:myDropzone.options.thumbnail.call(myDropzone, mockFile, "\\uploads\\dropzone-temp-thumb\\@item.Name");
                            @:myDropzone.options.complete.call(myDropzone, mockFile);
                        }
                    @foreach (var item in Model.EventDocuments)
                        {
                            @:var mockFile = { name: "@item.Name", size: @item.Size, accepted:true };
                            @:myDropzone.options.addedfile.call(myDropzone, mockFile);
                            @:myDropzone.options.complete.call(myDropzone, mockFile);
                        }
                }
                return {
                    // public functions
                    init: function () {
                        demos();
                    }
                };
            }();
            DropzoneDemo.init();
        })
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHVM4_FCYFOxPqVlTn_YOXBRV_INOLYbk&callback=initMap">
    </script>

}
